<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>柠檬诗诗的小站</title>
  
  <subtitle>一个记录生活和工作的地方</subtitle>
  <link href="https://www.lemonss.net/atom.xml" rel="self"/>
  
  <link href="https://www.lemonss.net/"/>
  <updated>2022-10-18T14:39:09.083Z</updated>
  <id>https://www.lemonss.net/</id>
  
  <author>
    <name>LemonAce</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>禁止长按选中文本</title>
    <link href="https://www.lemonss.net/2017/01/06/longtap/"/>
    <id>https://www.lemonss.net/2017/01/06/longtap/</id>
    <published>2017-01-06T09:21:02.000Z</published>
    <updated>2022-10-18T14:39:09.083Z</updated>
    
    <content type="html"><![CDATA[<p>最近在项目中遇到了需要长按选中礼物码的东西，需要把礼物码旁边的文本禁止掉，查了资料，发现了两种方法可以禁止。</p><span id="more"></span><h4 id="css方法："><a href="#css方法：" class="headerlink" title="css方法："></a>css方法：</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.no-touch</span> &#123;</span><br><span class="line">    -webkit-touch-callout: none;</span><br><span class="line">    -webkit-user-select: none;</span><br><span class="line">    -khtml-user-select: none;</span><br><span class="line">    -moz-user-select: none;</span><br><span class="line">    -ms-user-select: none;</span><br><span class="line">    user-select: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>添加一个类，对于需要禁止的dom添加这个类</p><h4 id="JS方法："><a href="#JS方法：" class="headerlink" title="JS方法："></a>JS方法：</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ontouchstart=<span class="string">&quot;return false;&quot;</span></span><br></pre></td></tr></table></figure><p>在需要禁止的dom上添加这段代码</p><p>两种方法对于安卓和IOS的支持我没有单独测试。两个同时使用，对于安卓和IOS可以起到禁止作用。</p><h4 id="备注："><a href="#备注：" class="headerlink" title="备注："></a>备注：</h4><p>1、在手机UC浏览器中，如果添加了这段meta标签，则全文无法长按调起菜单：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;browsermode&quot;</span> <span class="attr">content</span>=<span class="string">&quot;application&quot;</span>/&gt;</span><span class="comment">&lt;!-- uc不能复制网页内容 需要复制去掉即可--&gt;</span></span><br></pre></td></tr></table></figure><p>2、在手机QQ浏览器（IOS版本）中，长按会弹出保存图片选项（还没有找到原因）：</p><p><img src="/assets/blogImg/longtap01.jpg" alt="qq浏览器保存选项"></p><h4 id="其他未验证方法："><a href="#其他未验证方法：" class="headerlink" title="其他未验证方法："></a>其他未验证方法：</h4><p>新增事件 contextmenu 可以实现：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;button&#x27;</span>).<span class="title function_">bind</span>(<span class="string">&#x27;contextmenu&#x27;</span>, <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">  e.<span class="title function_">preventDefault</span>();</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;最近在项目中遇到了需要长按选中礼物码的东西，需要把礼物码旁边的文本禁止掉，查了资料，发现了两种方法可以禁止。&lt;/p&gt;</summary>
    
    
    
    <category term="代码" scheme="https://www.lemonss.net/categories/%E4%BB%A3%E7%A0%81/"/>
    
    
    <category term="代码片段" scheme="https://www.lemonss.net/tags/%E4%BB%A3%E7%A0%81%E7%89%87%E6%AE%B5/"/>
    
  </entry>
  
  <entry>
    <title>利用postMessage解决webview中iframe数据交互问题</title>
    <link href="https://www.lemonss.net/2016/12/21/postMessage/"/>
    <id>https://www.lemonss.net/2016/12/21/postMessage/</id>
    <published>2016-12-21T07:49:41.000Z</published>
    <updated>2022-10-18T14:39:17.701Z</updated>
    
    <content type="html"><![CDATA[<p>最近在项目中遇到了一个在客户端中的webview中嵌入iframe页面的问题，但是嵌入的iframe无法自己撑开，所以需要webview中给iframe一个高度。</p><p><img src="/assets/blogImg/postMessage01.png" alt="iframe高度bug"></p><p>这就比较尴尬了，因为webview肯定不知道iframe的高度，所以需要iframe给传一个高度出来。</p><p>经过一番查找之后，知道了一种很方便的方法-postMessage方法。</p><h4 id="先来看看他的语法："><a href="#先来看看他的语法：" class="headerlink" title="先来看看他的语法："></a>先来看看他的语法：</h4><blockquote><p>otherWindow.postMessage(data, origin, [transfer]);</p></blockquote><p>otherWindow</p><ul><li>其他窗口的一个引用，比如iframe的contentWindow属性、执行window.open返回的窗口对象、或者是命名过或数值索引的window.frames。这里即可以是父窗口，也可以子窗口，两者是可以相互传递数据的。</li></ul><p>data</p><ul><li>将要发送到其他window的数据。它将会被结构化克隆算法序列化(这个不懂是什么意思)。这意味着你可以不受什么限制的将数据对象安全的传送给目标窗口而无需自己序列化。基本是什么参数都可以，字符串、数字、对象、数组，都OK。</li></ul><p>origin</p><ul><li>字符串参数，指明目标窗口的源，协议+主机+端口号[+URL]，URL会被忽略，所以可以不写，这个参数是为了安全考虑，postMessage()方法只会将message传递给指定窗口，当然如果愿意也可以建参数设置为”*”，这样可以传递给任意窗口，如果要指定和当前窗口同源的话设置为”/“。</li></ul><p>transfer(可选)</p><ul><li>是一串和message 同时传递的 Transferable 对象. 这些对象的所有权将被转移给消息的接收方，而发送一方将不再保有所有权。（不懂是什么意思，一般没有什么用吧，望大神指点）</li></ul><br/>#### 父页面获取iframe页面信息：demo我放在github上的：demo地址：[父页面获取iframe页面信息](https://htmlpreview.github.io/?https://github.com/yellowlemon/Demo/blob/master/postMessage/btoa/a.html)<p><strong>父页面：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是父页面<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>接收到的iframe信息是：<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;content&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;/btoa/b.html&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;0&quot;</span> <span class="attr">marginheight</span>=<span class="string">&quot;0&quot;</span> <span class="attr">marginwidth</span>=<span class="string">&quot;0&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// event 参数中有 data 属性，就是iframe页面发送过来的数据</span></span></span><br><span class="line"><span class="language-javascript">         <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;message&quot;</span>, <span class="keyword">function</span>(<span class="params">event</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">             <span class="comment">// 把iframe页面发送过来的数据显示在父页面中</span></span></span><br><span class="line"><span class="language-javascript">           <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;content&quot;</span>).<span class="property">innerHTML</span>= event.<span class="property">data</span>;</span></span><br><span class="line"><span class="language-javascript">         &#125;, <span class="literal">false</span>);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>iframe页面</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是iframe页面<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>发送的信息是：<span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;iframe&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;sendBtn&quot;</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;发送&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 点击按钮后向父页面发送数据</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;sendBtn&#x27;</span>).<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// window.parent代表父页面</span></span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">window</span>.<span class="property">parent</span>.<span class="title function_">postMessage</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;iframe&quot;</span>).<span class="property">value</span>, <span class="string">&#x27;*&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><br/>#### iframe页面获取父页面信息：demo我放在github上的：demo地址：[iframe页面获取父页面信息](https://htmlpreview.github.io/?https://github.com/yellowlemon/Demo/blob/master/postMessage/atob/a.html)<p><strong>父页面：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是父页面<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>发送的信息是：<span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;iframe&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">&quot;sendBtn&quot;</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;发送&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;/atob/b.html&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;0&quot;</span> <span class="attr">marginheight</span>=<span class="string">&quot;0&quot;</span> <span class="attr">marginwidth</span>=<span class="string">&quot;0&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 点击按钮后向iframe页面发送数据</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;sendBtn&#x27;</span>).<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// window.frames[0]代表第一个iframe页面</span></span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">window</span>.<span class="property">frames</span>[<span class="number">0</span>].<span class="title function_">postMessage</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;iframe&quot;</span>).<span class="property">value</span>, <span class="string">&#x27;*&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>iframe页面</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是iframe页面<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>接收到的父页面信息是：<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;content&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// event 参数中有 data 属性，就是父页面发送过来的数据</span></span></span><br><span class="line"><span class="language-javascript">         <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;message&quot;</span>, <span class="keyword">function</span>(<span class="params">event</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">             <span class="comment">// 把父页面发送过来的数据显示在父页面中</span></span></span><br><span class="line"><span class="language-javascript">           <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;content&quot;</span>).<span class="property">innerHTML</span>= event.<span class="property">data</span>;</span></span><br><span class="line"><span class="language-javascript">         &#125;, <span class="literal">false</span>);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>通过这两个简单的例子我们会发现postMessage的强大之处，有了postMessage，我们甚至可以在两个iframe之间传送数据，只需要一个共同的父元素做中间页。</p><br/>#### 需要注意的地方：<p><strong>兼容性：</strong></p><p><img src="/assets/blogImg/postMessage02.png" alt="caniuse"></p><p>通过图上可以看出，基本大部分的都能兼容的，但是需要注意一下这句话。</p><blockquote><p>Internet Explorer 8 and 9, and Firefox versions 6.0 and below only support strings as postMessage’s message.(ie 8和9,和Firefox 6.0及以下版本只支持字符串作为postMessage的消息。)</p></blockquote><p>所以如果需要支持这些版本的需要注意data只能是字符串。</p><p><strong>安全性：</strong></p><p>在线上进行交互时，最好做好安全措施，对于postMessage，最好采用“双向安全机制”。发送方发送数据的时候，确认接受方的源（所以最好不要用*），而接受方监听到message事件后，也可以用event.origin判断是否来自于正确可靠的发送方。并且最好做一下传递数据的数据类型校验。如以下代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">function checkMessage(event) &#123;</span><br><span class="line">    // 只获取需要的域，并非所有都可以跨域</span><br><span class="line">    if (event.origin != &quot;need domain&quot;) &#123;</span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    var data = event.data;</span><br><span class="line">    // 传输数据类型校验</span><br><span class="line">    if (typeof(data) !== &#x27;object&#x27;) &#123;</span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // data 的type中包含xxx则为xxx需要字段。</span><br><span class="line">    return data.type === &quot;xxx&quot;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>并且通过不同的type可以处理不同的数据，如以下代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">switch (checkMessage(event)) &#123;</span><br><span class="line">    case &#x27;height&#x27;:</span><br><span class="line">        $(&quot;#bet_&quot;+e.data.id).css(&quot;height&quot;, (e.data.height+1) + &quot;px&quot;);</span><br><span class="line">        break;</span><br><span class="line">    case &#x27;jumpDown&#x27;:</span><br><span class="line">        window.location.href = downUrl;</span><br><span class="line">        break;</span><br><span class="line">    default:</span><br><span class="line">        break;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;最近在项目中遇到了一个在客户端中的webview中嵌入iframe页面的问题，但是嵌入的iframe无法自己撑开，所以需要webview中给iframe一个高度。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/assets/blogImg/postMessage01.png&quot; alt</summary>
      
    
    
    
    <category term="代码" scheme="https://www.lemonss.net/categories/%E4%BB%A3%E7%A0%81/"/>
    
    
    <category term="js" scheme="https://www.lemonss.net/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>hexo博客之HTTPS访问</title>
    <link href="https://www.lemonss.net/2016/12/13/hexo-ssl/"/>
    <id>https://www.lemonss.net/2016/12/13/hexo-ssl/</id>
    <published>2016-12-13T05:58:20.000Z</published>
    <updated>2022-10-18T14:38:28.568Z</updated>
    
    <content type="html"><![CDATA[<p>最近在看微信小程序时发现小程序必须要https的请求才能支持，所以就在查资料时发现了一篇很有趣的文章<a href="http://www.cnblogs.com/likwo/p/6043675.html">《微信小程序之后台https域名绑定以及免费的https证书申请》</a></p><p>我灵光一现，那能不能把我的bolg也加上https了？？说干就干，申请https的ca证书，还是很方便的，申请一个，半个小时都要不了。</p><span id="more"></span><p>只需要到阿里云的安全里面，有一个证书服务。</p><p><img src="/assets/blogImg/hexo-ssl01.png" alt="证书服务"></p><p>点进去以后，然后购买免费DV SLL云证书就可以了，之后就是域名和一些身份信息的验证，然后你就能拿到你的密匙了。</p><p>阿里云这里做的很好，对于不同的服务器都有不同的配置说明，只需要照着配置去修改就可以了。</p><p><img src="/assets/blogImg/hexo-ssl02.png" alt="证书配置"></p><p>因为我的服务器配置是nginx，所以我就参照这个阿里云的配置，进行了配置，这里贴一下我的nginx配置。</p><p><img src="/assets/blogImg/hexo-ssl03.png" alt="nginx配置"></p><p>在配置https的情况中，遇到了一些问题，这里总结一下</p><p>1、80端口访问问题：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">listen 443 ssl;</span><br><span class="line">ssl on;</span><br></pre></td></tr></table></figure><p>在把ssl打开后，80端口的访问全部会被nginx拒绝掉，并且抛出一个497错误。</p><p>查了资料，可以利用497错误将连接重定向到https的域名，参照我的配置即可。</p><p>2、七牛云存储无法访问问题</p><p>添加https后，七牛云存储的图片都无法访问了(可以配置https请求，但是这就需要钱了，问题是最缺的就是钱)。没有办法，只有把七牛的博客图片全部都签回自己的云服务器。</p><p>3、主题的报错统计反馈无法执行</p><p>在yilia中有一段错误统计代码，会将错误反馈给litten大神，也是因为https的限制，导致这个请求无法发送，不得已只有把这段JS代码屏蔽掉了。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;最近在看微信小程序时发现小程序必须要https的请求才能支持，所以就在查资料时发现了一篇很有趣的文章&lt;a href=&quot;http://www.cnblogs.com/likwo/p/6043675.html&quot;&gt;《微信小程序之后台https域名绑定以及免费的https证书申请》&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我灵光一现，那能不能把我的bolg也加上https了？？说干就干，申请https的ca证书，还是很方便的，申请一个，半个小时都要不了。&lt;/p&gt;</summary>
    
    
    
    <category term="hexo" scheme="https://www.lemonss.net/categories/hexo/"/>
    
    
    <category term="hexo" scheme="https://www.lemonss.net/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>7种方法解决移动端Retina屏幕1px边框问题</title>
    <link href="https://www.lemonss.net/2016/12/08/retina-1px-border/"/>
    <id>https://www.lemonss.net/2016/12/08/retina-1px-border/</id>
    <published>2016-12-08T02:38:15.000Z</published>
    <updated>2022-10-18T14:39:25.464Z</updated>
    
    <content type="html"><![CDATA[<p>在之前的项目中，UI告诉我说我们移动项目中的边框全部都变粗了。原谅我的近视眼，为什么我看不出什么差距了，结果UI把他的设计稿跟我的屏幕截图跟我看，居然真的不一样！！！</p><p>没有办法，只有在后面的版本中去修改了，但是要改的话，需要知道是为什么。所以查了很多资料，终于搞懂了这个问题，并且总结了几种方法。</p><span id="more"></span><h3 id="造成边框变粗的原因"><a href="#造成边框变粗的原因" class="headerlink" title="造成边框变粗的原因"></a>造成边框变粗的原因</h3><p>其实这个原因很简单，因为css中的1px并不等于移动设备的1px，这些由于不同的手机有不同的像素密度。在window对象中有一个devicePixelRatio属性，他可以反应css中的像素与设备的像素比。</p><blockquote><p>devicePixelRatio的官方的定义为：设备物理像素和设备独立像素的比例，也就是 devicePixelRatio = 物理像素 / 独立像素。</p></blockquote><h3 id="解决边框变粗的6种办法"><a href="#解决边框变粗的6种办法" class="headerlink" title="解决边框变粗的6种办法"></a>解决边框变粗的6种办法</h3><h5 id="1、0-5px边框"><a href="#1、0-5px边框" class="headerlink" title="1、0.5px边框"></a>1、0.5px边框</h5><p>在2014年的 WWDC，“设计响应的Web体验” 一讲中，Ted O’Connor 讲到关于“retina<br>hairlines”（retina 极细的线）：在retina屏上仅仅显示1物理像素的边框，开发者应该如何处理呢。</p><p>他们曾介绍到 iOS 8 和 OS X Yosemite 即将支持 0.5px 的边框：</p><p><img src="/assets/blogImg/retina-1px-border01.jpg" alt="0.5px边框"></p><p>额的神呐！so easy! 果真如此吗？</p><p>这样还不够（WWDC幻灯片通常是“唬人”的），但是相差不多。</p><p>问题是 retina 屏的浏览器可能不认识0.5px的边框，将会把它解释成0px，没有边框。包括 iOS 7 和之前版本，OS X Mavericks 及以前版本，还有 Android 设备。</p><p><strong>解决方案：</strong></p><p>解决方案是通过 JavaScript 检测浏览器能否处理0.5px的边框，如果可以，给html标签元素添加个class。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="variable language_">window</span>.<span class="property">devicePixelRatio</span> &amp;&amp; devicePixelRatio &gt;= <span class="number">2</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> testElem = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">  testElem.<span class="property">style</span>.<span class="property">border</span> = <span class="string">&#x27;.5px solid transparent&#x27;</span>;</span><br><span class="line">  <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(testElem);</span><br><span class="line">  <span class="keyword">if</span> (testElem.<span class="property">offsetHeight</span> == <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;html&#x27;</span>).<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&#x27;hairlines&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">removeChild</span>(testElem);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 脚本应该放在&lt;body&gt;内，如果在&lt;head&gt;里面运行，需要包装 $(document).ready(function() &#123;&#125;)</span></span><br></pre></td></tr></table></figure><p>然后，极细的边框样式就容易了：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#bbb</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.hairlines</span> <span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">border-width</span>: <span class="number">0.5px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>优点：</strong></p><ul><li>简单，不需要过多代码。</li></ul><p><strong>缺点：</strong></p><ul><li>无法兼容安卓设备、 iOS 8 以下设备。</li></ul><h5 id="2、使用border-image实现"><a href="#2、使用border-image实现" class="headerlink" title="2、使用border-image实现"></a>2、使用border-image实现</h5><p>准备一张符合你要求的border-image：</p><p><img src="/assets/blogImg/retina-1px-border02.jpg" alt="底部边框"></p><p>样式设置：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.border-bottom-1px</span> &#123;</span><br><span class="line">    <span class="attribute">border-width</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">1px</span> <span class="number">0</span>;</span><br><span class="line">    -webkit-<span class="attribute">border-image</span>: <span class="built_in">url</span>(<span class="string">linenew.png</span>) <span class="number">0</span> <span class="number">0</span> <span class="number">2</span> <span class="number">0</span> stretch;</span><br><span class="line">    <span class="attribute">border-image</span>: <span class="built_in">url</span>(<span class="string">linenew.png</span>) <span class="number">0</span> <span class="number">0</span> <span class="number">2</span> <span class="number">0</span> stretch;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上文是把border设置在边框的底部，所以使用的图片是2px高，上部的1px颜色为透明，下部的1px使用视觉规定的border的颜色。如果边框底部和顶部同时需要border，可以使用下面的border-image：</p><p><img src="/assets/blogImg/retina-1px-border03.png" alt="上下边框"></p><p>样式设置：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.border-image-1px</span> &#123;</span><br><span class="line">    <span class="attribute">border-width</span>: <span class="number">1px</span> <span class="number">0</span>;</span><br><span class="line">    -webkit-<span class="attribute">border-image</span>: <span class="built_in">url</span>(<span class="string">linenew.png</span>) <span class="number">2</span> <span class="number">0</span> stretch;</span><br><span class="line">    <span class="attribute">border-image</span>: <span class="built_in">url</span>(<span class="string">linenew.png</span>) <span class="number">2</span> <span class="number">0</span> stretch;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>到目前为止，我们已经能在iphone上展现1px border的效果了。但是我们发现这样的方法在非视网膜屏上会出现border显示不出来的现象，于是使用Media Query做了一些兼容，样式设置如下：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.border-image-1px</span> &#123;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#666</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@media</span> <span class="keyword">only</span> screen <span class="keyword">and</span> (<span class="attribute">-webkit-min-device-pixel-ratio</span>: <span class="number">2</span>) &#123;</span><br><span class="line">    <span class="selector-class">.border-image-1px</span> &#123;</span><br><span class="line">        <span class="attribute">border-bottom</span>: none;</span><br><span class="line">        <span class="attribute">border-width</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">1px</span> <span class="number">0</span>;</span><br><span class="line">        -webkit-<span class="attribute">border-image</span>: <span class="built_in">url</span>(<span class="string">../img/linenew.png</span>) <span class="number">0</span> <span class="number">0</span> <span class="number">2</span> <span class="number">0</span> stretch;</span><br><span class="line">        <span class="attribute">border-image</span>: <span class="built_in">url</span>(<span class="string">../img/linenew.png</span>) <span class="number">0</span> <span class="number">0</span> <span class="number">2</span> <span class="number">0</span> stretch;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>优点：</strong></p><ul><li>可以设置单条,多条边框</li><li>没有性能瓶颈的问题</li></ul><p><strong>缺点：</strong></p><ul><li>修改颜色麻烦, 需要替换图片</li><li>圆角需要特殊处理，并且边缘会模糊</li></ul><h5 id="3、使用background-image实现"><a href="#3、使用background-image实现" class="headerlink" title="3、使用background-image实现"></a>3、使用background-image实现</h5><p>background-image 跟border-image的方法一样，你要先准备一张符合你要求的图片。然后将边框模拟在背景上。</p><p>样式设置：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.background-image-1px</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">../img/line.png</span>) repeat-x left bottom;</span><br><span class="line">    -webkit-<span class="attribute">background-size</span>: <span class="number">100%</span> <span class="number">1px</span>;</span><br><span class="line">    <span class="attribute">background-size</span>: <span class="number">100%</span> <span class="number">1px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>优点：</strong></p><ul><li>可以设置单条,多条边框</li><li>没有性能瓶颈的问题</li></ul><p><strong>缺点：</strong></p><ul><li>修改颜色麻烦, 需要替换图片</li><li>圆角需要特殊处理，并且边缘会模糊</li></ul><h5 id="4、多背景渐变实现"><a href="#4、多背景渐变实现" class="headerlink" title="4、多背景渐变实现"></a>4、多背景渐变实现</h5><p>与background-image方案类似，只是将图片替换为css3渐变。设置1px的渐变背景，50%有颜色，50%透明。</p><p>样式设置：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.background-gradient-1px</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>:</span><br><span class="line">    <span class="built_in">linear-gradient</span>(<span class="number">180deg</span>, black, black <span class="number">50%</span>, transparent <span class="number">50%</span>) top    left  / <span class="number">100%</span> <span class="number">1px</span> no-repeat,</span><br><span class="line">    <span class="built_in">linear-gradient</span>(<span class="number">90deg</span>,  black, black <span class="number">50%</span>, transparent <span class="number">50%</span>) top    right / <span class="number">1px</span> <span class="number">100%</span> no-repeat,</span><br><span class="line">    <span class="built_in">linear-gradient</span>(<span class="number">0</span>,      black, black <span class="number">50%</span>, transparent <span class="number">50%</span>) bottom right / <span class="number">100%</span> <span class="number">1px</span> no-repeat,</span><br><span class="line">    <span class="built_in">linear-gradient</span>(-<span class="number">90deg</span>, black, black <span class="number">50%</span>, transparent <span class="number">50%</span>) bottom left  / <span class="number">1px</span> <span class="number">100%</span> no-repeat;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 或者 */</span></span><br><span class="line"><span class="selector-class">.background-gradient-1px</span>&#123;</span><br><span class="line">   <span class="attribute">background</span>: <span class="built_in">-webkit-gradient</span>(linear, left top, left bottom, <span class="built_in">color-stop</span>(.<span class="number">5</span>, transparent), <span class="built_in">color-stop</span>(.<span class="number">5</span>, <span class="number">#c8c7cc</span>), <span class="built_in">to</span>(<span class="number">#c8c7cc</span>)) left bottom repeat-x;</span><br><span class="line">   <span class="attribute">background-size</span>: <span class="number">100%</span> <span class="number">1px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>优点：</strong></p><ul><li>可以实现单条、多条边框</li><li>边框的颜色随意设置</li></ul><p><strong>缺点：</strong></p><ul><li>代码量不少</li><li>圆角没法实现</li><li>多背景图片有兼容性问题</li></ul><h5 id="5、使用box-shadow模拟边框"><a href="#5、使用box-shadow模拟边框" class="headerlink" title="5、使用box-shadow模拟边框"></a>5、使用box-shadow模拟边框</h5><p>利用css 对阴影处理的方式实现0.5px的效果</p><p>样式设置：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box-shadow-1px</span> &#123;</span><br><span class="line">    <span class="attribute">box-shadow</span>: inset <span class="number">0px</span> -<span class="number">1px</span> <span class="number">1px</span> -<span class="number">1px</span> <span class="number">#c8c7cc</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>优点：</strong></p><ul><li>代码量少</li><li>可以满足所有场景</li></ul><p><strong>缺点：</strong></p><ul><li>边框有阴影，颜色变浅</li></ul><h5 id="6、viewport-rem-实现"><a href="#6、viewport-rem-实现" class="headerlink" title="6、viewport + rem 实现"></a>6、viewport + rem 实现</h5><p>同时通过设置对应viewport的rem基准值，这种方式就可以像以前一样轻松愉快的写1px了。</p><p>在devicePixelRatio = 2 时，输出viewport：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;initial-scale=0.5, maximum-scale=0.5, minimum-scale=0.5, user-scalable=no&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在devicePixelRatio = 3 时，输出viewport：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;initial-scale=0.3333333333333333, maximum-scale=0.3333333333333333, minimum-scale=0.3333333333333333, user-scalable=no&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这种兼容方案相对比较完美，适合新的项目，老的项目修改成本过大。</p><p>对于这种方案，可以看看<a href="https://github.com/amfe/article/issues/17">《使用Flexible实现手淘H5页面的终端适配》</a></p><p><strong>优点：</strong></p><ul><li>所有场景都能满足</li><li>一套代码，可以兼容基本所有布局</li></ul><p><strong>缺点：</strong></p><ul><li>老项目修改代价过大，只适用于新项目</li></ul><h5 id="7、伪类-transform-实现"><a href="#7、伪类-transform-实现" class="headerlink" title="7、伪类 + transform 实现"></a>7、伪类 + transform 实现</h5><p>对于老项目，有没有什么办法能兼容1px的尴尬问题了，个人认为伪类+transform是比较完美的方法了。</p><p>原理是把原先元素的 border 去掉，然后利用 :before 或者 :after 重做 border ，并 transform 的 scale 缩小一半，原先的元素相对定位，新做的 border 绝对定位。</p><p>单条border样式设置：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.scale-1px</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">border</span>:none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.scale-1px</span><span class="selector-pseudo">:after</span>&#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#000</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">1px</span>;</span><br><span class="line">    -webkit-<span class="attribute">transform</span>: <span class="built_in">scaleY</span>(<span class="number">0.5</span>);</span><br><span class="line">            <span class="attribute">transform</span>: <span class="built_in">scaleY</span>(<span class="number">0.5</span>);</span><br><span class="line">    -webkit-<span class="attribute">transform-origin</span>: <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">            <span class="attribute">transform-origin</span>: <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>四条boder样式设置:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.scale-1px</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">border</span>:none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.scale-1px</span><span class="selector-pseudo">:after</span>&#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span><br><span class="line">    -webkit-<span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">    <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200%</span>;</span><br><span class="line">    -webkit-<span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">0.5</span>);</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">0.5</span>);</span><br><span class="line">    -webkit-<span class="attribute">transform-origin</span>: left top;</span><br><span class="line">    <span class="attribute">transform-origin</span>: left top;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最好在使用前也判断一下，结合 JS 代码，判断是否 Retina 屏：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="variable language_">window</span>.<span class="property">devicePixelRatio</span> &amp;&amp; devicePixelRatio &gt;= <span class="number">2</span>)&#123;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;ul&#x27;</span>).<span class="property">className</span> = <span class="string">&#x27;scale-1px&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>优点：</strong></p><ul><li>所有场景都能满足</li><li>支持圆角(伪类和本体类都需要加border-radius)</li></ul><p><strong>缺点：</strong></p><ul><li>对于已经使用伪类的元素(例如clearfix)，可能需要多层嵌套</li></ul><h4 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h4><ul><li><a href="http://efe.baidu.com/blog/1px-on-retina/">《1px on retina》</a></li><li><a href="http://www.ghugo.com/css-retina-hairline/">《再谈mobile web retina 下 1px 边框解决方案》</a></li><li><a href="http://jinlong.github.io/2015/05/24/css-retina-hairlines/">《Retina屏的移动设备如何实现真正1px的线？》</a></li><li><a href="http://imweb.io/topic/55e3d402771670e207a16bd1">《在retina屏中实现1px border效果》</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;在之前的项目中，UI告诉我说我们移动项目中的边框全部都变粗了。原谅我的近视眼，为什么我看不出什么差距了，结果UI把他的设计稿跟我的屏幕截图跟我看，居然真的不一样！！！&lt;/p&gt;
&lt;p&gt;没有办法，只有在后面的版本中去修改了，但是要改的话，需要知道是为什么。所以查了很多资料，终于搞懂了这个问题，并且总结了几种方法。&lt;/p&gt;</summary>
    
    
    
    <category term="代码" scheme="https://www.lemonss.net/categories/%E4%BB%A3%E7%A0%81/"/>
    
    
    <category term="css" scheme="https://www.lemonss.net/tags/css/"/>
    
    <category term="移动端" scheme="https://www.lemonss.net/tags/%E7%A7%BB%E5%8A%A8%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>Hexo折腾之图片存储</title>
    <link href="https://www.lemonss.net/2016/12/07/hexo-qiniu/"/>
    <id>https://www.lemonss.net/2016/12/07/hexo-qiniu/</id>
    <published>2016-12-07T06:58:16.000Z</published>
    <updated>2022-10-18T14:38:11.452Z</updated>
    
    <content type="html"><![CDATA[<p>hexo博客弄好了，写博客遇到了一个最大的问题，就是图片的存放问题，看了一下litten的博客，他是把图片都存在自己服务器的。可是自己的服务器存储是用的系统存储，应该没有那么大的空间，怎么办了？？</p><p>那就只有看看网上的云存储有什么比较好的了，最早的时候，我用的图床是贴图库，之前他可以无限流量，不限时间，但是现在保存时间只能有6个月了。</p><p>那肯定不行啊，所以只有换一个了，查了资料，发现了七牛云存储，有一个专门的hexo的七牛插件：<a href="https://github.com/gyk001/hexo-qiniu-sync">hexo-qiniu-sync</a>，但是这个插件有个问题，就是只会把本地文件同步到七牛。这跟我的设想完全不符。</p><p>最后我发现了一个神器——极简图床</p><span id="more"></span><p><img src="/assets/blogImg/hexo-qiniu01.jpg" alt="极简图床"></p><p>下面就来讲一讲如何配置七牛以及极简图床：</p><p>注册的流程就不说了，注册成功以后，需要做的是：</p><ul><li>注册七牛账号并添加资源，然后充值￥10(为了后面的自定义域名绑定)。</li><li>选中对应资源绑定加速域名，即将绑定的域名必须为中国大陆以备案。推荐使用二级域名。以免出现，域名绑定成功，通过外链无法访问资源的尴尬（因为 Hexo 部署到 GitHub/Coding 的时候已经对该域名解析里指定过CNAME，再次添加CNAME会报错）。</li><li>强烈推荐使用 Chrome + <a href="http://yotuku.cn/">极简图床（Chrome 插件）</a>+ 上面配置好的七牛账号，完成 Markdown 编辑器里面的外链图片插入工作。</li></ul><p>极简图床对于七牛的配置也非常简单，只需要填入一些参数即可</p><p><img src="/assets/blogImg/hexo-qiniu02.jpg" alt="极简图床+七牛"></p><p>并且极简图床支持markdown语法的复制，可以一步到位，几乎无伤~真是超赞。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;hexo博客弄好了，写博客遇到了一个最大的问题，就是图片的存放问题，看了一下litten的博客，他是把图片都存在自己服务器的。可是自己的服务器存储是用的系统存储，应该没有那么大的空间，怎么办了？？&lt;/p&gt;
&lt;p&gt;那就只有看看网上的云存储有什么比较好的了，最早的时候，我用的图床是贴图库，之前他可以无限流量，不限时间，但是现在保存时间只能有6个月了。&lt;/p&gt;
&lt;p&gt;那肯定不行啊，所以只有换一个了，查了资料，发现了七牛云存储，有一个专门的hexo的七牛插件：&lt;a href=&quot;https://github.com/gyk001/hexo-qiniu-sync&quot;&gt;hexo-qiniu-sync&lt;/a&gt;，但是这个插件有个问题，就是只会把本地文件同步到七牛。这跟我的设想完全不符。&lt;/p&gt;
&lt;p&gt;最后我发现了一个神器——极简图床&lt;/p&gt;</summary>
    
    
    
    <category term="hexo" scheme="https://www.lemonss.net/categories/hexo/"/>
    
    
    <category term="hexo" scheme="https://www.lemonss.net/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://www.lemonss.net/2016/12/01/hello-world/"/>
    <id>https://www.lemonss.net/2016/12/01/hello-world/</id>
    <published>2016-12-01T06:58:16.000Z</published>
    <updated>2022-10-18T14:36:48.917Z</updated>
    
    <content type="html"><![CDATA[<p>从很久之前就想弄一个博客，奈何自己是一个纠结(lan)的人，再加上之前一直很忙(lan)！一直拖了这么久。</p><p>之前用过wordpress、leanote来搭建自己的博客。但是又不是很满意，wordpress是用PHP来搭的，这个作为一个坚信前端统治世界的人怎么能忍受！leanote是因为笔记同步的时候老是会出现一些莫名其妙的bug，故弃之。</p><p>无意中看到了hexo搭建的博客，从此就迷上了它，它基于markdown书写，与简书和印象笔记完美的对应起来了，所以就开始了折腾之旅。</p><span id="more"></span><p>印象笔记对markdown的支持不是很友好，所以又去折腾了sublime的markdown语法以及印象笔记的支持，有兴趣的可以看看这篇<a href="http://mp.weixin.qq.com/s?__biz=MzA3NjEwNjEzNA==&mid=2453601160&idx=1&sn=22c2160d46197747511396973a26f450&scene=2&srcid=0420TamIrY4dtGWXovGnFuu2&from=timeline&isappinstalled=0#wechat_redirect">《程序猿进阶之路——用Sublime配制Evernote全解》</a>，这下就完美了，只差搭建hexo博客了。</p><p>折腾了一阵，纠结症又犯了，对于主题的选择又开始了，在这篇文章了中纠结了<a href="https://www.zhihu.com/question/24422335">《有哪些好看的 Hexo 主题？》</a>半天。最后还是选择yilia主题，然后又是一番折腾，添加了简书和SF的图标，又通过查看litten的相册代码，自己写了一个很垃圾的nodejs抓取脚本，有时间放在github上一起分享。</p><p>希望以后努力完善我的博客，哈哈~</p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=355992&auto=1&height=66"></iframe>]]></content>
    
    
    <summary type="html">&lt;p&gt;从很久之前就想弄一个博客，奈何自己是一个纠结(lan)的人，再加上之前一直很忙(lan)！一直拖了这么久。&lt;/p&gt;
&lt;p&gt;之前用过wordpress、leanote来搭建自己的博客。但是又不是很满意，wordpress是用PHP来搭的，这个作为一个坚信前端统治世界的人怎么能忍受！leanote是因为笔记同步的时候老是会出现一些莫名其妙的bug，故弃之。&lt;/p&gt;
&lt;p&gt;无意中看到了hexo搭建的博客，从此就迷上了它，它基于markdown书写，与简书和印象笔记完美的对应起来了，所以就开始了折腾之旅。&lt;/p&gt;</summary>
    
    
    
    <category term="杂记" scheme="https://www.lemonss.net/categories/%E6%9D%82%E8%AE%B0/"/>
    
    
    <category term="杂记" scheme="https://www.lemonss.net/tags/%E6%9D%82%E8%AE%B0/"/>
    
  </entry>
  
</feed>
